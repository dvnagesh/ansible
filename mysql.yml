---
- name: Play to Install package
  hosts: '{{ hosts | default("testhosts") }}'
# ansible-playbook mysql.yml --extra-vars "hosts=testhosts"
#  hosts: testhosts
  pre_tasks:
#  - fail: msg="'hostsa' not defined"
#    when: hostsa is undefined
  - name: Running pre-task, a task before role play on {{ ansible_hostname }}
    command:
       echo "pre-task"
  - debug: msg="Pre task {{ ntp_server }}"
  - debug: msg="Remote host {{ hostvars['abc.example.com']['ansible_nodename'] }}"

  - shell: cat /etc/issue
    register: issue_opt
  - shell: echo "Issue contains Ubuntu"
    when: issue_opt.stdout.find('Ubuntu') != -1

#    - name: retrieve the list of home directories
#        command: ls /home
#        register: home_dirs
#      - name: add home dirs to the backup spooler
#        file: path=/mnt/bkspool/{{ item }} src=/home/{{ item }} state=link
#        with_items: "{{ home_dirs.stdout_lines }}"
        # same as with_items: "{{ home_dirs.stdout.split() }}"

#- name: add several users
#  user: name={{ item.name }} state=present groups={{ item.groups }}
#  with_items:
#    - { name: 'testuser1', groups: 'wheel' }
#    - { name: 'testuser2', groups: 'root' }

#- action: shell /usr/bin/foo
#  register: result
#  until: result.stdout.find("all systems go") != -1
#  retries: 5
#  delay: 10

#  - command: echo {{ item }}
#    with_items: [ 0, 2, 4, 6, 8, 10 ]
#    when: item > 5
#  - debug: msg="Item value is {{ item }}"
#  - debug: msg="Pre task {{ ansible_distribution }} {{ ansible_eth0.ipv4.address }}"
  roles:
    - { role: install }
    - { role: remove }
#    - { role: install, pkg: mysql-client }
#    - { role: install, pkg: postgresql-client }
#    - { role: remove, pkg: mysql-client-5.5 }
#    - { role: remove, pkg: postgresql-client-9.3 }
  tasks:
  - name: Task that runs after role play
    command: echo "task"
    register: result
  - debug: msg="Result on {{ ansible_nodename }} is {{ result.stdout }}"
    when: (ansible_distribution == "CentOS" and ansible_distribution_major_version|int >= 6) or
          (ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "14")
#  - command: /bin/false
#    register: result
#    ignore_errors: True
#  - command: /bin/something
#    when: result|failed
#  - command: /bin/something_else
#    when: result|succeeded
#  - command: /bin/still/something_else
#    when: result|skipped

  post_tasks:
  - name: Task that runs at the end
    command: echo "post-task"

# ansible all -m setup --> for list of system variables
# Execution flow - pre_tasks, roles, tasks, post_tasks

#    - { role: install, when: "ansible_os_family == 'Debian'", pkg: mysql-client }
#    - { role: remove, when: "ansible_os_family == 'Debian'", pkg: mysql-client* }
#  tasks:
#  - include: apt-install.yml pkg=mysql-client
#  - include: apt-remove.yml pkg=mysql-client*
#  - name: Update apt repos
#    apt: 
#      update_cache=yes
#      cache_valid_time=2
#
#  - name: Run command
#    shell:
#      uptime >> /tmp/uptime.log
#    notify:
#      - restart ntp

#  handlers:
#  - name: restart ntp
#    service: name=ntp state=restarted
#  - name: restart cron
#    service: name=cron state=restarted
